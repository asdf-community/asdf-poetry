#!/usr/bin/env bash

set -Eeuo pipefail

trap cleanup SIGINT SIGTERM ERR

cleanup() {
  trap - SIGINT SIGTERM ERR
  rm -rf "$ASDF_INSTALL_PATH"
  echo
  echo "Cleanup: Something went wrong!"
  echo
  echo "$(caller): ${BASH_COMMAND}"
}

semver_ge() {
  printf '%s\n%s\n' "$2" "$1" | sort --check=quiet --version-sort
}

install_poetry() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local flags=

  if [ "$install_type" == "version" ]; then
    semver_ge "$ASDF_INSTALL_VERSION" 1.1.7 && install_vercomp="ge" || install_vercomp="lt"
    semver_ge "$ASDF_INSTALL_VERSION" 1.2.0 && config_vercomp="ge" || config_vercomp="lt"
    semver_ge "$ASDF_INSTALL_VERSION" 2.0.0 && venv_vercomp="ge" || venv_vercomp="lt" #  Poetry 2.0.0 introduced a new virtualenv management system
  else
    install_vercomp="ge"
    config_vercomp="lt"
    venv_vercomp="lt"
  fi

  if [[ -n ${ASDF_POETRY_INSTALL_URL-} ]]; then
    install_url=$ASDF_POETRY_INSTALL_URL
  elif [ "$install_vercomp" == "ge" ]; then
    install_url="https://install.python-poetry.org"
  else
    # last committed get-poetry.py
    install_url="https://raw.githubusercontent.com/python-poetry/poetry/d222411ae9d01a04ec8eda348a65aa83852c37d0/get-poetry.py"
  fi

  if [[ $install_url == *get-poetry* ]]; then
    flags=--no-modify-path
  fi

  if [ "$install_type" = "version" ]; then
    curl -sSL "$install_url" | POETRY_HOME=$install_path python3 - --version "$version" $flags
  elif [ "$install_type" = "ref" ]; then
    curl -sSL "$install_url" | POETRY_HOME=$install_path python3 - --git https://github.com/python-poetry/poetry.git@"$version" $flags
  else
    fail "unknown install type"
  fi

  if [ "$config_vercomp" == "ge" ]; then # Execute if Poetry version is >= 1.2.0
    # Ensure that poetry behaves as expected with asdf python (pyenv)
    echo Configuring poetry to behave properly with asdf ...
    if semver_ge "$ASDF_INSTALL_VERSION" "2.0.0"; then
      echo Running: \\"poetry config virtualenvs.use-poetry-python false\\".
      echo ""
      "$install_path"/bin/poetry config virtualenvs.use-poetry-python false
    else # Poetry version >= 1.2.0 and < 2.0.0
      echo Running: \\"poetry config virtualenvs.prefer-active-python true\\".
      echo ""
      "$install_path"/bin/poetry config virtualenvs.prefer-active-python true
    fi
  else # Poetry version < 1.2.0
    echo Warning: Poetry versions prior to 1.2.0 may not work properly with asdf.
    echo Consider upgrading to a later version.
    echo https://github.com/asdf-community/asdf-poetry/issues/10
  fi
}

install_poetry "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
